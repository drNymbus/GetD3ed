body{
  /*
  Variables
  */
  --colorGpatterns :rgb(255,0,255);
  --colorConvoys:rgb(0,0,255);
  --colorClosedSwarms:rgb(255,0,0);
  --colorFuzzyClosedSwarms:rgb(255,100,0);
  --colorConvergents:rgb(255,255,0);
  --colorDivergents:rgb(0,255,0);


  margin:0;
  font-family: verdana, arial, sans-serif;
}

header{
  display: flex;
  /*position: absolute;*/
  justify-content: space-around;
  border-bottom: 1px solid black;
  /*height:80px;*/
}

header a{
  margin:auto;
}

header img{
  height:50px;
}

div#trajectoire{
  height: 100%;
  width: 100%;
  display: flex;
}
div#legende{
  /*display: flex;*/
  height:92vh;
  width:15%;
  border-right: 1px solid black;
  overflow: scroll;
  float: left;
}

div#chart{
  /*display: flex;*/
  width: 85%;
  overflow: scroll;
  height: 92vh;
}

p{
  margin: 10px;
  text-align: justify;
}

.node rect {
  cursor: move;
  fill-opacity: .9;
  shape-rendering: crispEdges;
}
 
.node text {
  pointer-events: none;
  text-shadow: 0 1px 0 #fff;
}
 
.link {
  fill: none;
  stroke: #000;
  stroke-opacity: .2;
}
 
.link:hover {
  stroke-opacity: .5;
}

div.btnLegende li{
  list-style-type: none; 
}

div.btnLegende input{
  margin-right: 5px;
}

div.btnLegende label{
  color:#000;
  opacity: 1;
}

div.btnLegende label:hover{
  opacity: 0.8;
}

div.btnLegende label.GroupPattern{
  color:var(--colorGpatterns);
}

div.btnLegende label.Convoy{
  color:var(--colorConvoys);
}
div.btnLegende label.ClosedSwarm{
  color:var(--colorClosedSwarms);
}
div.btnLegende label.FuzzyClosedSwarm{
  color:var(--colorFuzzyClosedSwarms);
}
div.btnLegende label.Convergent{
  color:var(--colorConvergents);
}
div.btnLegende label.Divergent{
  color:var(--colorDivergents);
}


g path.hover{
  stroke-opacity: 0.5;
}




path.GroupPattern{;
  stroke: var(--colorGpatterns);
}

path.Convoy{
  stroke:var(--colorConvoys);
}
path.ClosedSwarm{
  stroke:var(--colorClosedSwarms);
}
path.FuzzyClosedSwarm{
  stroke:var(--colorFuzzyClosedSwarms);
}
path.Convergent{
  stroke:var(--colorConvergents);
}
path.Divergent{
  stroke:var(--colorDivergents);
}
